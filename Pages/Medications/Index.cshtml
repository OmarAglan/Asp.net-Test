@page
@model Roshta.Pages_Medications.IndexModel

@{
    ViewData["Title"] = "Medications";
}

<h1>Medications</h1>

<p>
    <a asp-page="Create">Create New Medication</a>
</p>

<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" placeholder="Search by Name..." name="SearchString" value="@Model.SearchString">
        <button class="btn btn-outline-primary" type="submit">Search</button>
        @if (!string.IsNullOrEmpty(Model.SearchString))
        {
            <a asp-page="./Index" class="btn btn-outline-secondary">Clear</a>
        }
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-CurrentPage="@Model.CurrentPage"
                   asp-route-SearchString="@Model.SearchString">
                    @Html.DisplayNameFor(model => model.Medication[0].Name)
                </a>
                @* Optional: Add sort indicator icon here based on Model.CurrentSort *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Medication[0].Dosage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Medication[0].Form)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Medication[0].Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Medication[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Medication[0].UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Medication) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dosage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Form)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                    <i class="bi bi-pencil-square"></i>
                </a>
                <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info me-1" title="Details">
                    <i class="bi bi-info-circle"></i>
                </a>
                <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                    <i class="bi bi-trash"></i>
                </a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    // Determine if Previous/Next buttons should be disabled
    var prevDisabled = Model.CurrentPage <= 1 ? "disabled" : "";
    var nextDisabled = Model.CurrentPage >= Model.TotalPages ? "disabled" : "";
}

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @prevDisabled">
                <a asp-page="./Index"
                   asp-route-SearchString="@Model.SearchString"
                   asp-route-CurrentPage="@(Model.CurrentPage - 1)"
                   asp-route-sortOrder="@Model.CurrentSort"
                   class="page-link" aria-label="Previous">
                    <span aria-hidden="true">&laquo; Previous</span>
                </a>
            </li>

            <li class="page-item active" aria-current="page">
                 <span class="page-link">Page @Model.CurrentPage of @Model.TotalPages</span>
            </li>

            <li class="page-item @nextDisabled">
                <a asp-page="./Index"
                   asp-route-SearchString="@Model.SearchString"
                   asp-route-CurrentPage="@(Model.CurrentPage + 1)"
                   asp-route-sortOrder="@Model.CurrentSort"
                   class="page-link" aria-label="Next">
                    <span aria-hidden="true">Next &raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
    <div class="text-center text-muted small">
        Total Medications: @Model.Count
    </div>
}
else if (Model.Count > 0)
{
     <div class="text-center text-muted small">
        Total Medications: @Model.Count
    </div>
}
