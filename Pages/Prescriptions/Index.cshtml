@page
@model Roshta.Pages.Prescriptions.IndexModel
@using Roshta.Models // Required for PrescriptionStatus enum

@{ 
    ViewData["Title"] = "Prescriptions";
}

<h1>@ViewData["Title"]</h1>

<!-- Display TempData messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<p>
    <a asp-page="./Create" class="btn btn-primary">Create New Prescription</a>
</p>

<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" placeholder="Search by Patient Name..." name="SearchString" value="@Model.SearchString">
        <button class="btn btn-outline-primary" type="submit">Search</button>
        @if (!string.IsNullOrEmpty(Model.SearchString))
        {
            <a asp-page="./Index" class="btn btn-outline-secondary">Clear</a>
        }
    </div>
</form>

@if (Model.PrescriptionList == null || !Model.PrescriptionList.Any())
{
    <div class="alert alert-info">No prescriptions found.</div>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PrescriptionList[0].Patient.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrescriptionList[0].Doctor.Name) 
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrescriptionList[0].DateIssued)
                </th>
                 <th>
                    @Html.DisplayNameFor(model => model.PrescriptionList[0].ExpiryDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrescriptionList[0].Status)
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.PrescriptionList) {
            <tr class="@(item.Status == PrescriptionStatus.Cancelled ? "table-secondary text-muted" : "")">
                <td>
                    @Html.DisplayFor(modelItem => item.Patient.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Doctor.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateIssued)
                </td>
                 <td>
                    @Html.DisplayFor(modelItem => item.ExpiryDate)
                </td>
                <td>
                    <span class="badge @(item.Status == PrescriptionStatus.Active ? "bg-success" : item.Status == PrescriptionStatus.Cancelled ? "bg-danger" : "bg-secondary")">
                        @Html.DisplayFor(modelItem => item.Status)
                    </span>
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a> 
                    
                    @if (item.Status == PrescriptionStatus.Active)
                    { 
                        <form method="post" asp-page-handler="Cancel" asp-route-id="@item.Id" style="display: inline;" onsubmit="return confirm('Are you sure you want to cancel this prescription?');">
                            <button type="submit" class="btn btn-sm btn-warning">Cancel</button>
                        </form>
                    }
                    @* Edit/Delete might be added later based on status or permissions *
                    @* <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> | *
                    @* <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> *@
                </td>
            </tr>
    }
        </tbody>
    </table>
} 